% MET=1 Newton, MET=2 Uproshennyi Newton (QuazyNewton), MET=3 Broyden (toje QuazyNewton), MET=5 Prostyh iteraciy, MET=6 Seidel
% Metod N'yutona resheniya SNU
MET=6
F=@(x)[2*x(1)^2-x(1)*x(2)-5*x(1)+1;x(1)+3*log10(x(1))-x(2)^2]
xkm1=[30 30]';x0=xkm1;xk=xkm1;
J=@(x)[4*x(1)-x(2)-5,-x(1);1+3/x(1)/log(10),-2*x(2)]
D=@(x)[sqrt((x(1)*x(2)+5*x(1)-1)/2) ;sqrt(x(1)+3*log10(x(1)))];
f1=inline('sqrt((x(1)*(x(2)+5)-1)/2)','x')
f2=inline('sqrt(x(1)+3*log10(x(1)))','x');
J0_1=inv(J(x0));
k=0;
Ak=J(xkm1); 
while true
 k=k+1
 switch MET
     
 case 1
 xk=xkm1-inv(J(xkm1))*F(xkm1);
 %xk=xkm1-inv(J(x0))*F(xkm1);%uproshennyi method N'yutona
 %(stranica 121, Kireev V.I., Panteleev A.V. Chislennye metody v primerah i zadachah. 2008)
 
 case 2
 xk=xkm1-J0_1*F(xkm1);
 case 3
 Fkm1=F(xkm1);
 sk=-inv(Ak)*F(xkm1);
 xk=xkm1+sk;
 Fk=F(xk);
 yk=Fk-Fkm1;
 Ak=Ak+((yk-Ak*sk)*sk')/(sk'*sk);   
 case 5
 xk=D(xkm1);
 case 6
    xk(1)=f1(xkm1);
    xk(2)=f2(xk(1));
    disp(xkm1)    
 end
 if abs(xk-xkm1)<0.0000001,  break, end
 xkm1=xk;
end
fprintf('Newton\n')
fprintf('k = %4i  x1 =%12.8f   x2 =%12.8f\n\n\n',k,xk)


disp('Reshenie s pomosh''yu vstroennoi funkcii v Matlab(Optimization Toolbox): fsolve')
x0=[50 50]';%nachalnoe reshenie
fsolve(F,x0)

disp('Reshenie s pomosh''yu vstroennoi funkcii v Matlab(Optimization Toolbox): lsqnonlin')
x0=[50 50]';%nachalnoe reshenie
%lsqnonlin(F,x0)
